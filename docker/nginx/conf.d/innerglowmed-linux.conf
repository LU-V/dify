# HTTP 强制跳转到 HTTPS
server {
    listen 80;
    server_name innerglowmed.xyz www.innerglowmed.xyz;
    return 301 https://$server_name$request_uri;
}

# HTTPS 主配置
server {
    listen 443 ssl http2;
    server_name innerglowmed.xyz www.innerglowmed.xyz;

    # SSL 证书配置
    ssl_certificate     /etc/nginx/ssl/innerglowmed/innerglowmed.xyz.pem;
    ssl_certificate_key /etc/nginx/ssl/innerglowmed/innerglowmed.xyz.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    
     
    # 健康检查路由
    location /healthy {
        proxy_pass  http://172.29.34.164:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 健康检查不缓存
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # API代理路由
    location /fapi {
        proxy_pass http://172.29.34.164:3001/api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # API请求超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 禁用API缓存
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # CORS headers (如果需要)
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
    }
    
    



    location = /mapi/v2/dify/messages/chat/completions {
    	proxy_pass http://172.29.34.164:8000/api/v2/dify/messages/chat/completions;

    	proxy_http_version 1.1;
	proxy_set_header Connection '';    
	proxy_set_header Host $host;
   	proxy_set_header X-Real-IP $remote_addr;
    	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    	proxy_set_header X-Forwarded-Proto $scheme;
    	proxy_set_header X-Forwarded-Host $host;

   	proxy_connect_timeout 120s;
    	proxy_send_timeout 300s;
    	proxy_read_timeout 300s;

    	proxy_buffering off;
    	proxy_cache off;
    	proxy_request_buffering off;

    	add_header Cache-Control "no-cache" always;
   	add_header Connection "keep-alive" always;
    	add_header X-Accel-Buffering "no" always;

    	add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    	add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control" always;
}

    # ✅ 3. FastAPI 后端（Python）接口代理
    location /mapi {
        proxy_pass http://172.29.34.164:8000/api;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        proxy_connect_timeout 120s;
        proxy_send_timeout 180s;
        proxy_read_timeout 180s;
        proxy_buffering off;
        proxy_cache off;
        proxy_request_buffering off;

        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control" always;
    }

	
location /api/tts-stream-proxy {
        proxy_pass http://172.29.34.164:3001;   
     	proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 流式传输设置
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 24h;
        proxy_send_timeout 24h;
        
        # SSE相关headers
        add_header Cache-Control "no-cache";
        add_header Connection "keep-alive";
    }
    
    # 静态资源缓存策略
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://172.29.34.164:3001;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 静态资源缓存30天
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status "STATIC";
    }
    
    # HTML文件缓存策略
    location ~* \.html$ {
        proxy_pass http://172.29.34.164:3001;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # HTML文件短缓存
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }
    

    # ✅ 3. FastAPI 后端（Python）接口代理
   # location /med/api/ {
    #    proxy_pass http://172.29.34.164:8000/api/;

   #     proxy_set_header Host $host;
   #     proxy_set_header X-Real-IP $remote_addr;
   #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   #     proxy_set_header X-Forwarded-Proto $scheme;
   #     proxy_set_header X-Forwarded-Host $host;

   #     proxy_connect_timeout 120s;
   #     proxy_send_timeout 180s;
   #     proxy_read_timeout 180s;
   #     proxy_buffering off;
   #     proxy_cache off;
   #     proxy_request_buffering off;

  #      add_header Access-Control-Allow-Origin "*" always;
  #      add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
  #      add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control" always;
  #  }

    # ✅ 4. Dify Web 控制台
    location /dify/ {
        proxy_pass http://172.29.34.164:3000/;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ✅ 5. Chat 接口兼容路径（旧路径转发到 Python）
    location /v1/chat-messages {
        proxy_pass http://172.29.34.164:8000/api/chat;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;

        proxy_connect_timeout 180s;
        proxy_send_timeout 180s;
        proxy_read_timeout 180s;
        proxy_buffering off;
    }

    # ✅ 6. OPTIONS 预检请求支持
    location ~ ^/(api|med/api|node-api)/ {
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }


    # 默认路由（根路径和其他路径）
    location / {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 默认缓存策略
        add_header Cache-Control "no-cache, must-revalidate";
    }

    # ✅ 7. 健康检查
    location = /health-check {
        access_log off;
        return 200 "meditation-ai proxy healthy\n";
        add_header Content-Type text/plain;
    }
}

